worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
}

http {
    access_log off;
    error_log /dev/null;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Otimizações para baixa latência (P99 < 11ms)
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # Cache de resolução DNS (não aplicável para unix sockets, mas boa prática)
    resolver_timeout 2s;
    
    # Buffers otimizados para payloads pequenos
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    client_max_body_size 1k;
    large_client_header_buffers 2 1k;
    
    # Timeouts agressivos para alta performance
    client_body_timeout 10s;
    client_header_timeout 10s;
    send_timeout 10s;
    
    # Compressão desabilitada (payloads muito pequenos)
    gzip off;

    upstream gateway {
        # Load balancing otimizado para latência
        least_conn;
        server unix:/tmp/gateway-1.sock max_fails=3 fail_timeout=5s;
        server unix:/tmp/gateway-2.sock max_fails=3 fail_timeout=5s;
        
        # Conexões persistentes otimizadas
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    # Cache de upstream para reduzir overhead
    upstream_keepalive_cache on;
    upstream_keepalive_cache_size 64m;

    server {
        listen 80 reuseport;
        
        # Otimizações específicas para os endpoints do teste
        location = /payments {
            # Endpoint de alta carga - otimizações máximas
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_pass http://gateway;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Headers mínimos para reduzir overhead
            proxy_set_header Host $host;
            
            # Timeouts agressivos
            proxy_connect_timeout 2s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            
            # Sem retry para evitar duplicações
            proxy_next_upstream off;
        }
        
        location = /payments-summary {
            # Endpoint de consulta - pode cachear brevemente
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_pass http://gateway;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            
            # Timeouts maiores para consultas
            proxy_connect_timeout 2s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        location = /purge-payments {
            # Endpoint administrativo
            proxy_buffering off;
            proxy_pass http://gateway;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            
            proxy_connect_timeout 2s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
        }
        
        # Fallback para outros endpoints
        location / {
            proxy_buffering off;
            proxy_pass http://gateway;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            
            proxy_connect_timeout 2s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
    }
}
